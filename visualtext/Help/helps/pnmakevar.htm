<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>pnmakevar</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1433>
<meta name=layout-width content=916>
<meta name=date content="01 4, 2002 12:53:18 PM">


<!--(Links)=========================================================-->

<link rel=StyleSheet href=default.css>



</head>

<!--(Body)==========================================================-->


<body>

<h1>pnmakevar</h1>

<h2>Purpose</h2>

<p>Make a variable for a given pnode <span style="font-style: italic;">aPnode</span>.</p>

<h2>Syntax</h2>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valString);<span style="margin-left: 40px;"><br>
&nbsp;</span></p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valString - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">&nbsp;</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valInteger);<br>
&nbsp;</p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valInteger - type: int</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valPnode);<br>
&nbsp;</p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valPnode - type: pnode</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valCon);<br>
&nbsp;</p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valCon - type: con</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valPhrase);<br>
&nbsp;</p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valPhrase - type: phrase</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valAttribute);<br>
&nbsp;</p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valAttribute - type: attr</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">None = pnmakevar(aPnode, varName, valValue);<br>
&nbsp;</p>

<p style="margin-left: 40px;
			line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">aPnode - type: pnode<br>
varName - type: str</p>

<p style="line-height: normal;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			margin-left: 40px;
			margin-top: 0pt;
			margin-bottom: 0pt;
			font-size: 10pt;">valValue - type: val</p>

<h2>Returns</h2>

<h2>Remarks</h2>

<p>Functionally equivalent to statements such as</p>

<p>N(&quot;name&quot;, 3) = &quot;xyz&quot;;</p>

<p>But, whereas with the G, N, X, and S references the variable name must 
 be a literal string, pnmakevar allows string-valued NLP++ expressions 
 to specify the variable name. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example:</p>

<p>pnmakevar(N(3), &quot;na&quot; + &quot;me&quot;, &quot;xyz&quot;);</p>

<p>In this way, the name of a variable can be created dynamically.</p>

<h2>Example</h2>

<h2>See Also</h2>

<p><a href="pnvar.htm">pnvar</a>, <a href="Table_of_Parse_Tree_Functions.htm">Parse 
 Tree Functions</a> </p>

<p>&nbsp;</p>

</body>

</html>
