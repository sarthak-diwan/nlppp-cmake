<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Table of Array Functions</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=641>
<meta name=layout-width content=1027>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="default.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1>Table of Array Functions</h1>

<p>Arrays and lists are treated equivalently in NLP++, and we'll continue 
 to call them both &quot;arrays&quot; for conciseness.</p>

<p>The current section is meant to round out the treatment of list-like 
 capabilities such as pushing a value to the front. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Up 
 to now, arrays were grown mainly by indexing to the last element.</p>

<p>Arrays can also be assigned and manipulated with parse tree functions 
 and kb functions.</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		wrapperparagraphselector=P
		style="width: 100%;
				margin-top: 14pt;
				x-border-left: 1px table-solid;
				x-border-top: 1px table-solid;
				x-border-right: 1px table-solid;
				x-border-bottom: 1px table-solid;
				border-collapse: separate;
				border-spacing: 0px;
				x-border-left: 1px table-solid;
				x-border-top: 1px table-solid;
				x-border-right: 1px table-solid;
				x-border-bottom: 1px table-solid;
				border-collapse: separate;
				border-spacing: 0px;"
		cellspacing=0
		width=100%
		border=1>

<tr>
<td style="background-color: #00ff00;
			x-cell-content-align: TOP;
			width: 15%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	bgcolor=#00FF00
	width=15%>
<p style="margin-bottom: 0;"><font style="color: #000000;"
									color=#000000><span style="font-weight: bold;">FUNCTION 
 NAME</span></font></td>
<td style="background-color: #00ff00;
			x-cell-content-align: TOP;
			width: 9%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	bgcolor=#00FF00
	width=9%>
<p style="margin-bottom: 0;"><font style="color: #000000;"
									color=#000000><span style="font-weight: bold;">RETURNS</span></font></td>
<td style="background-color: #00ff00;
			x-cell-content-align: TOP;
			width: 76%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	bgcolor=#00FF00
	width=76%>
<p style="margin-bottom: 0;"><font style="color: #000000;"
									color=#000000><span style="font-weight: bold;">DESCRIPTION</span></font></td></tr>

<tr>
<td style="x-cell-content-align: TOP;
			width: 15%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=15%>
<p style="margin-bottom: 0;"><span style="font-weight: bold;">push(var)</span></td>
<td style="x-cell-content-align: TOP;
			width: 9%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=9%>
<p style="margin-bottom: 0; font-weight: bold;">ARRAY</td>
<td style="x-cell-content-align: TOP;
			width: 76%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=76%>
<p style="margin-bottom: 0;">Push a value to the front of a variable's 
 value(s). <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Allows 
 mixed types (string, num, flt, concept...), allows redundant values, does 
 not check uniqueness. NOTE: This will alter the array indexing, pushed 
 item will be the 0th element of array index. <span style="color: #ff0000; font-weight: bold;">UNIMPLEMENTED</span></td></tr>

<tr>
<td style="x-cell-content-align: TOP;
			width: 15%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=15%>
<p>&nbsp;</td>
<td style="x-cell-content-align: TOP;
			width: 9%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=9%>
<p>&nbsp;</td>
<td style="x-cell-content-align: TOP;
			width: 76%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=76%>
<p style="margin-bottom: 0;">&nbsp;</td></tr>
</table>

<h2>&nbsp;</h2>

<p>&nbsp;</p>

<h2>See Also</h2>

<p>&nbsp;</p>

<p>&nbsp;</p>

</body>

</html>
