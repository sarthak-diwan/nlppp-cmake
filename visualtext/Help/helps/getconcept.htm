<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>getconcept</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1181>
<meta name=layout-width content=916>
<meta name=date content="01 4, 2002 1:08:59 PM">


<!--(Links)=========================================================-->

<link REL=StyleSheet HREF=default.css>



</head>

<!--(Body)==========================================================-->


<body>

<h1>getconcept</h1>

<h2>Purpose</h2>

<p>Get or make concept named <span style="font-style: italic;">conceptNameString</span> 
 under concept <span style="font-style: italic;">parentConcept</span>.</p>

<h2>Syntax</h2>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">returnedConcept = getconcept(parentConcept, conceptNameString)</p>

<p style="margin-left: 40px;
			line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">returnedConcept - type: con<br>
parentConcept - type: con<br>
conceptNameString - type: str</p>

<h2>Returns</h2>

<p style="margin-left: 40px;">returnedConcept - type: con</p>

<h2>Remarks</h2>

<p>All concepts have names (see <span style="font-family: monospace;">makeconcept</span>) 
 and need to be rooted in the concept hierarchy. This function returns 
 a concept given its name and its parent concept. If the parent concept 
 is bad, an error appears in the log output window. If the parent concept 
 does not have a child concept named conceptNameString, this function creates 
 one with that name. If the parent concept does have a child concept named 
 conceptNamestring, this function returns that concept.</p>

<h2>Example</h2>

<p>In this example, we show how we can create a concept like noun and assign 
 it as the value of a word's attribute. We create the concepts named <span 
 style="font-weight: bold;">words</span> and <span style="font-weight: bold;">noun</span> 
 as children to the root of the KB (<span style="font-weight: bold;">concept</span>), 
 and then make the concept <span style="font-weight: bold;">book</span> 
 a child of <span style="font-weight: bold;">words</span>.</p>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">G(&quot;words&quot;) = makeconcept(findroot(), &quot;words&quot;); <br>
G(&quot;noun&quot;) = makeconcept(findroot(),&quot;noun&quot;);<br>
G(&quot;noun_book&quot;) = makeconcept(G(&quot;words&quot;),&quot;book&quot;);</p>

<p>The KB editor at this point looks like:</p>

<p><img src="Image%20Files/addconval.gif"
		style="width: 192px;
				height: 216px;
				border-style: none;
				margin-top: 0px;
				margin-bottom: 0px;
				margin-left: 0px;
				margin-right: 0px;"
		width=192
		height=216
		border=0></p>

<p>Next, give <span style="font-style: normal; font-weight: bold;">book</span> 
 the attribute &quot;<span style="font-weight: bold;">is a&quot;</span> 
 and make the concept <span style="font-weight: bold;">noun</span> be the 
 value of <span style="font-weight: bold;">book</span>'s attribute &quot;<span 
 style="font-weight: bold;">is a</span>&quot;:</p>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">G(&quot;an_attr&quot;) = addattr(G(&quot;noun_book&quot;),&quot;is a&quot;);<br>
addconval(G(&quot;noun_book&quot;), &quot;is a&quot;, G(&quot;noun&quot;));</p>

<p>The remaining code finds the first child of <span style="font-weight: bold;">words</span> 
 named <span style="font-weight: bold;">book,</span><span style="font-weight: normal;"> 
 </span>gets the concept which is the value of the attribute <span style="font-weight: bold;">&quot;is 
 a&quot; </span><span style="font-weight: normal;">and prints out its name 
 ('noun') to output.txt:</span></p>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">G(&quot;aConcept&quot;) = <span style="font-weight: bold; x-text-underline: normal; /*begin!kadov{{*/ text-decoration: underline; /*}}end!kadov*/ ">getconcept</span>(G(&quot;words&quot;),&quot;book&quot;);<br>
G(&quot;anotherConcept&quot;) = getconval(findvals(G(&quot;aConcept&quot;),&quot;is a&quot;));<br>
&quot;output.txt&quot; &lt;&lt; conceptname(G(&quot;anotherConcept&quot;)) &lt;&lt; &quot;\n&quot;;</p>

<h2>See Also</h2>

<p style="margin-bottom: 0;"><a href="makeconcept.htm">makeconcept</a>, 
 <a HREF="conceptname.htm">conceptname</a>, <a href="Table_of_Knowledge_Base_Functions.htm">Knowledge 
 Base Functions</a></p>

</body>

</html>
