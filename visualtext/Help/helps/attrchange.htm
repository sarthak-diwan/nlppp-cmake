<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>attrchange</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1377>
<meta name=layout-width content=916>
<meta name=date content="01 4, 2002 12:56:42 PM">


<!--(Links)=========================================================-->

<link REL=StyleSheet HREF=default.css>



</head>

<!--(Body)==========================================================-->


<body>

<h1>attrchange</h1>

<h2>Purpose</h2>

<p>Replace all matching attribute-value pairs <span style="font-style: italic;">attrStr</span>-<span 
 style="font-style: italic;">oldValStr</span> in the KB belonging to the 
 concept <span style="font-style: italic;">aConcept</span> to new attribute-value 
 pairs <span style="font-style: italic;">attrStr</span>-<span style="font-style: italic;">newValStr</span>.</p>

<h2>Syntax</h2>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">returnedBoolean = attrchange(aConcept, attrStr, oldValStr, newValStr)</p>

<p style="margin-left: 40px;
			line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">returnedBoolean - type: bool<br>
aConcept - type: con<br>
attrStr - type: str<br>
oldValStr - type: str<br>
newValStr - type: str</p>

<h2>Returns</h2>

<p>1 if at least one pair is changed, 0 otherwise.</p>

<h2>Remarks</h2>

<p>Think of this as a global replace. If passed a bad concept, the function 
 writes an error to the output log.</p>

<h2>Example</h2>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;"># if you find apples in the concept hierarchy<br>
if (findconcept(findroot(),&quot;apple&quot;)) <br>
# kill them (to start fresh) <br>
rmconcept(findconcept(findroot(),&quot;apple&quot;));<br>
# Create the apple concept<br>
G(&quot;apple&quot;) = makeconcept(findroot(),&quot;apple&quot;);<br>
# Apple's color's red<br>
addstrval(G(&quot;apple&quot;),&quot;color&quot;,&quot;red&quot;);<br>
# MacIntosh apples are also red<br>
addstrval(makeconcept(G(&quot;apple&quot;),&quot;MacIntosh&quot;),&quot;color&quot;,&quot;red&quot;);<br>
# Print out apple's attribute and value<br>
if(attrname(findattrs(G(&quot;apple&quot;)))){ <br>
&quot;output.txt&quot; &lt;&lt; &quot;1) apples &quot; &lt;&lt; attrname(findattrs(G(&quot;apple&quot;))); <br>
&quot;output.txt&quot; &lt;&lt; &quot; &quot; <br>
&lt;&lt; getstrval(attrvals(findattrs(G(&quot;apple&quot;)))) &lt;&lt; &quot;\n&quot;;<br>
}<br>
# Test for a given attribute and value<br>
&quot;output.txt&quot; &lt;&lt; &quot;2) are apples red? &quot; <br>
&lt;&lt; attrwithval(G(&quot;apple&quot;), &quot;color&quot;, &quot;red&quot;) &lt;&lt; &quot;\n&quot;;<br>
&quot;output.txt&quot; &lt;&lt; &quot;3) are apples blue? &quot; &lt;&lt;<br>
attrwithval(G(&quot;apple&quot;), &quot;color&quot;, &quot;blue&quot;) &lt;&lt; &quot;\n&quot;;<br>
# Change a value of a given attribute to another value.<span style="font-weight: bold; x-text-underline: normal; /*begin!kadov{{*/ text-decoration: underline; /*}}end!kadov*/ "><br>
attrchange</span>(findroot(), &quot;color&quot;, &quot;red&quot;, &quot;blue&quot;);<br>
&quot;output.txt&quot; &lt;&lt; &quot;4) are apples blue now? &quot; &lt;&lt;<br>
attrwithval(G(&quot;apple&quot;), &quot;color&quot;, &quot;blue&quot;) &lt;&lt; &quot;\n&quot;;</p>

<p>The code above writes the following to output.txt:</p>

<p style="line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">1) apples color red<br>
2) are apples red? 1<br>
3) are apples blue? 0<br>
4) are apples blue now? 1</p>

<p>Since attrchange operates on all children of the parent concept, the 
 resulting KB looks like:</p>

<p><img src="Image%20Files/attrchange.gif"
		style="width: 313px;
				height: 211px;
				border-width: 1px;
				border-style: solid;
				margin-top: 0px;
				margin-bottom: 0px;
				margin-left: 0px;
				margin-right: 0px;"
		width=313
		height=211
		border=1></p>

<h2>See Also</h2>

<p style="margin-bottom: 0;"><a href="replaceval.htm">replaceval</a>, <a 
 href="Table_of_Knowledge_Base_Functions.htm">Knowledge Base Functions</a> 
 </p>

</body>

</html>
