<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Statements and Blocks</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=956>
<meta name=layout-width content=523>
<meta name=date content="07 19, 2001 3:04:24 PM">


<!--(Links)=========================================================-->

<link REL="StyleSheet" HREF="../default.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1>Statements and Blocks</h1>

<h2><a name=Expression></a>Expression Statement</h2>

<p>NLP++ expressions can be treated as statements by terminating them with 
 a semicolon.</p>

<h2>Statements and Blocks</h2>

<p>This too is modeled after the C programming language. Curly braces <span 
 style="font-weight: bold;">{</span> and <span style="font-weight: bold;">}</span> 
 delimit blocks of statements. Statements should end with a semicolon (<span 
 style="font-weight: bold;">;</span>). A statement can be an arbitrary 
 expression, a block, or fully nested <span style="font-weight: bold;">if-else</span> 
 statements.</p>

<h2><a name=Assignment></a>Assignment Statement</h2>

<p>Assignment is treated as an expression rather than as a statement. As 
 in C/C++, assignments can be chained.</p>

<h2><a name=if_else_statements></a>If-Else Statement</h2>

<p>NLP++ supports if-else statement syntax identical to C/C++.</p>

<h2><a name=while_statement></a>While Statement</h2>

<p>The only loop construct currently supported is the <span style="font-weight: bold;">while</span> 
 loop. Here's an example that prints out 0 thru 9:</p>

<p style="margin-left: 40px;
			line-height: normal;
			margin-bottom: 14pt;
			margin-top: 14pt;
			x-text-tab-stops: repeat 1in;
			white-space: nowrap;
			font-family: monospace;
			font-size: 10pt;">G(&quot;counter&quot;) = 0;<br>
G(&quot;loop_limit&quot;) = 10;<br>
while( G(&quot;counter&quot;) &lt; G(&quot;loop_limit&quot;)) {<br>
&quot;output.txt&quot; &lt;&lt; &quot;Loop counter = &quot; &lt;&lt; G(&quot;counter&quot;) &lt;&lt; &quot;\n&quot;;<br>
G(&quot;counter&quot;)++;<br>
}</p>

<h2>See Also</h2>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Code_Syntax.htm">Code 
 Syntax</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Tokens.htm">Tokens</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="About_NLP++_Variables.htm">Variables</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Variable_types.htm">Data 
 Types</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Special_Variables.htm">Special 
 Variables</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Functions_and_Actions.htm">Functions 
 and Actions</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Operators_and_Expressions.htm">Operators 
 and Expressions</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;">&nbsp;</p>

<p style="margin-bottom: 0;">&nbsp;</p>

<p style="margin-bottom: 0;">&nbsp;</p>

<p style="margin-bottom: 0;">&nbsp;</p>

<p style="margin-bottom: 0;">&nbsp;</p>

</body>

</html>
