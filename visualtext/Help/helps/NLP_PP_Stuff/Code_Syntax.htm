<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Code Syntax</title>

<!--(Meta)==========================================================-->

<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=661>
<meta name=layout-width content=775>
<meta name=date content="09 5, 2001 1:09:30 AM">


<!--(Links)=========================================================-->

<link REL=StyleSheet HREF="../default.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1>Code Syntax</h1>

<p>NLP++ code syntax is similar to <!--kadov_tag{{<ignored>}}-->C<!--kadov_tag{{</ignored>}}--> 
 or C++ code. Further topics within the Code Syntax section elaborate the 
 tokens, data types, variables, operators, functions, actions, expressions, 
 statements, arrays, and other constructs of the language.</p>

<p>An interesting feature of NLP++ is that variables are named by strings 
 and not by identifiers. You can primarily refer to variables with the 
 <!--kadov_tag{{<ignored>}}-->G(<!--kadov_tag{{</ignored>}}-->), <!--kadov_tag{{<ignored>}}-->X(<!--kadov_tag{{</ignored>}}-->), 
 <!--kadov_tag{{<ignored>}}-->N(<!--kadov_tag{{</ignored>}}-->), and <!--kadov_tag{{<ignored>}}-->S(<!--kadov_tag{{</ignored>}}-->) 
 special functions, which refer to a global, context, node, and suggested 
 node variable respectively. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Some 
 functions take variable names as arguments, e.g., <a href="../pnvar.htm">pnvar</a>.</p>

<p style="margin-bottom: 0;">NLP++ data types include integer, float, string, 
 parse tree, and knowledge base types. </p>

<h2>See Also</h2>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Tokens.htm">Tokens</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="About_NLP++_Variables.htm">Variables</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Variable_types.htm">Data 
 Types</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Special_Variables.htm">Special 
 Variables</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Functions_and_Actions.htm">Functions 
 and Actions</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Operators_and_Expressions.htm">Operators 
 and Expressions</a></p>

<p style="margin-top: 0pt; margin-bottom: 0pt;"><a href="Statements_and_blocks.htm">Statements 
 and Blocks</a></p>

<p style="margin-bottom: 0;">&nbsp;</p>

</body>

</html>
